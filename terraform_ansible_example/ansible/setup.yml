- hosts: all
  become: yes

  pre_tasks:
    - name: Create a ext4 filesystem on /dev/sdb1 and check disk blocks
      community.general.filesystem:
        fstype: ext4
        dev: "{{ volume_fs_path }}"

    - name: Create parent mount directory if it does not exist
      ansible.builtin.file:
        path: /mnt/db_volume
        state: directory
        mode: '0777'

    - name: Mount database volume by label
      ansible.posix.mount:
        path: /mnt/db_volume
        src: "{{ volume_fs_path }}"
        fstype: ext4
        state: mounted

    - name: Create child pg_data directory if it does not exist
      ansible.builtin.file:
        path: /mnt/db_volume/pg_data
        state: directory
        mode: '0774'

    - name: Import postgresql-10 apt key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
      become: true

    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main
        state: present

    - name: "Install PostgresSQL packages"
      apt:
        name: postgresql-10
        state: present
        update_cache: true

    - name: Download repmgr repository installer
      get_url:
        dest: /tmp/repmgr-installer.sh
        mode: 0700
        url: https://dl.2ndquadrant.com/default/release/get/deb

    - name: Execute repmgr repository installer
      shell: /tmp/repmgr-installer.sh

    - name: Install repmgr for PostgreSQL 10
      apt:
        name: postgresql-10-repmgr
        update_cache: yes

  tasks:
    - name: Turning on UWF logging
      community.general.ufw:
        logging: "on"

    - name: Allowing SSH on UFW
      community.general.ufw:
        rule: allow
        name: OpenSSH

    - name: Whitelisting IPs on UFW
      community.general.ufw:
        rule: allow
        src: "{{ item }}"
        port: "5432"
        proto: tcp
        direction: in
        to_ip: "{{ private_ip }}"
      loop:
        - 192.168.182.252
        - 192.168.179.173
        - 192.168.190.33
        - 192.168.225.73
        - 192.168.226.177
        - 192.168.168.112

    - name: Enabling UFW with default DENY policy
      community.general.ufw:
        state: enabled
        policy: deny

    - name: Change ownership of postgres data directory
      file:
        path: /mnt/db_volume/pg_data
        owner: postgres
        group: postgres
        mode: 0700

    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Stopping postgres cluster"
      service: 
        name: postgresql@10-main 
        state: stopped

    - name: Drop default postgresql cluster
      shell: pg_dropcluster 10 main

    - name: Create cluster in mounted volume
      shell: pg_createcluster 10 main -d /mnt/db_volume/pg_data

    - name: "Start and enable cluster services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql@10-main

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        address: "192.168.0.0/16"
        dest: "/etc/postgresql/10/main/pg_hba.conf"
        contype: host
        databases: redacted
        method: md5
        users: "redacted"
        create: true
      become: yes
      become_user: postgres

    - name: Copy PostgreSQL Config Template
      template:
        src: templates/postgresql.conf
        dest: /etc/postgresql/10/main/postgresql.conf
      become: yes
      become_user: postgres

    - name: Setup repmgr user and database
      become_user: postgres
      ignore_errors: yes
      shell: |
        createuser --replication --createdb --createrole --superuser repmgr &&
        psql -c 'ALTER USER repmgr SET search_path TO repmgr_test, "$user", public;' &&
        createdb repmgr --owner=repmgr

    - name: Create Repmgr directory
      file: path=/etc/postgresql/10/repmgr state=directory mode=0755
      become: yes
      become_user: postgres

    - name: Copy Repmgr Config Template
      template:
        src: templates/repmgr.conf
        dest: /etc/postgresql/10/repmgr/repmgr.conf
      become: yes
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
